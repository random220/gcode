#!/bin/bash

if [[ "$1" == '0' ]]; then
    docker rm -f rl
    docker rmi -f myrl
fi

docker inspect rl > /dev/null 2>&1
if [ $? -eq 0 ]; then
    docker exec -it -u om -w /home/om rl bash
    exit 0
fi

docker image inspect myrl > /dev/null 2>&1
if [ $? -ne 0 ]; then
    docker build -t myrl .
fi

h=rl
mkdir -p ~/ggg
rsync -a --delete ~/gcode/ ~/ggg/gcode/
docker run -d --name $h -h $h \
    -p 3022:22 \
    -p 3128:3128 \
    -p 3129:3129 \
    -p 4343:4343 \
    myrl

#    -v ~/:/home/om/h \

if [[ -d ~/gcode ]]; then

    docker cp -a ~/gcode/ rl:/tmp/gcode/
    docker exec -i rl bash -c 'chown -R om:om /tmp/gcode'
    docker exec -i rl bash -c 'rm -rf /home/om/gcode; mv /tmp/gcode /home/om/gcode'

    cat <<"EOF" | docker exec -i -u om -w /home/om rl bash -
#rsync -a --delete h/gcode/ gcode/
. gcode/bin/gcode.0
. .bashrc
gits

cat <<"_EOF" >>~/.bashrc
pp2m() {
cat <<"__EOF" >/tmp/a.sh
pp2m() {
  cd
  rm -rf /tmp/_gcode/
  docker cp rl:/home/om/gcode/ /tmp/_gcode/
  local new=$(du -sk /tmp/_gcode|awk '{print $1}') # 113084 (from 113084    /tmp/_gcode)
  if [[ $new -gt 112000 ]]; then
    :
  else
    echo
    echo "/tmp/_gcode/ too small"
    echo "Did 'docker cp rl:/home/om/gcode/ /tmp/_gcode/' work?"
    echo
    return 0
  fi
  rsync -a --delete /tmp/_gcode/ ~/gcode/
  rm -rf /tmp/_gcode
}
pp2m
__EOF

cat <<"__EOF"
docker cp rl:/tmp/a.sh /tmp/a.sh && . /tmp/a.sh
__EOF

}
_EOF

echo 'alias pp2c="rsync -a --delete ~/h/gcode/ ~/gcode/"' >>~/.bashrc
EOF

fi

docker exec -it -u om -w /home/om rl bash
