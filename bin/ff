#!/bin/bash

# https://browserleaks.com/

proxytype=static
proxyport=3128
if [[ "$1" != '' ]]; then
    proxyport="$1"
fi
if [[ "$proxyport" =~ ^d ]] || [[ "$proxyport" =~ ^D ]] ; then
    proxyport=$(sed 's/^.//' <<<"$proxyport")
    proxytype=dynamic
fi

found=0
ff=''
for ff_ in \
    ~/'Applications/Firefox.app/Contents/MacOS/firefox' \
    '/Applications/Firefox.app/Contents/MacOS/firefox' \
    '/opt/homebrew/bin/firefox' \
    '/snap/firefox/3357/usr/lib/firefox/firefox' \
    ; do
  if [[ -f "$ff_" ]]; then
    ff="$ff_"
    break
  fi
done
echo "==>> $ff"

if [[ "$ff" == '' ]]; then
  echo Firefox not found
  exit 1
fi

bn=$(basename "$0")-$proxyport
ddir=~/.firefox/$bn

if [[ $bn =~ ^ff-[0-9]+$ ]]; then
  rm -rf "$ddir"
fi

mkdir -p $ddir

if [[ ! -f "$ddir/prefs.js" ]]; then
  cat <<'EOF' | sed "s/_proxyport_/$proxyport/g"  >"$ddir/prefs.js"
user_pref("datareporting.policy.dataSubmissionPolicyAcceptedVersion", 2);
user_pref("datareporting.policy.dataSubmissionPolicyNotifiedTime", "1738258034678");
user_pref("browser.startup.homepage_override.mstone", "134.0.2");
user_pref("layout.css.prefers-color-scheme.content-override", 0);
user_pref("browser.shell.checkDefaultBrowser", false);
user_pref("browser.warnOnQuitShortcut", false);
user_pref("browser.download.useDownloadDir", false);
user_pref("browser.startup.homepage", "https://browserleaks.com/dns");
user_pref("media.peerconnection.ice.proxy_only", true);
EOF
  if [[ $proxytype == 'static' ]]; then
    cat <<'EOF' | sed "s/_proxyport_/$proxyport/g"  >>"$ddir/prefs.js"
user_pref("network.proxy.http", "localhost");
user_pref("network.proxy.http_port", _proxyport_);
user_pref("network.proxy.share_proxy_settings", true);
user_pref("network.proxy.ssl", "localhost");
user_pref("network.proxy.ssl_port", _proxyport_);
user_pref("network.proxy.type", 1);
EOF
  else
    cat <<'EOF' | sed "s/_proxyport_/$proxyport/g"  >>"$ddir/prefs.js"
user_pref("network.proxy.socks", "localhost");
user_pref("network.proxy.socks_port", _proxyport_);
user_pref("network.proxy.type", 1);
EOF
  fi
fi

if [[ $bn == 'ff' ]]; then
  nohup bash -c "'$ff' --profile $ddir; rm -rf $ddir" >/dev/null 2>&1 &
else
  nohup bash -c "'$ff' --profile $ddir" >/dev/null 2>&1 &
fi

echo $ddir


