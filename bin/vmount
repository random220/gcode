#!/bin/bash

export PATH=$HOME/bin:$HOME/gcode/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games

mountpoint=$HOME'/b/om/p'
volpath=''
algo=''  # 'vera' or 'luks' or 'dmg'
veracrypt=''

main() {
    mounted && get_out 0
    get_volpath || get_out 1 'Could not determine volpath'
    mountvol
    echo "mountpoint"
    [[ -d "$mountpoint"/CRUZER ]] && get_out 0
    get_out 1
}

get_out() {
    local status="$1"
    local msg="$2"
    echo "$msg"
    exit $status
}

mounted() {
    [[ -d "$mountpoint/CRUZER" ]] && return 0
    return 1
}

mountvol() {
    if [[ "$algo" == 'vera' ]]; then
        mount_vera
    elif [[ "$algo" == 'luks' ]]; then
        mount_luks
    elif [[ "$algo" == 'dmg' ]]; then
        mount_dmg
    fi
}

get_volpath() {
    vera_volpaths=('/b/om/CRUZER.vol' "$HOME/b/om/CRUZER.vol")
    luks_volpaths=('/b/om/CRUZER-LUKS.vol' "$HOME/b/om/CRUZER-LUKS.vol")
    dmg_volpaths=("$HOME/b/om/CRUZER.dmg")

    volpath=''
    for v in ${vera_volpaths[@]};  do
      if [[ -f $v ]]; then
        volpath=$v
        algo='vera'
        break
      fi
    done

    for v in ${luks_volpaths[@]};  do
      if [[ -f $v ]]; then
        volpath=$v
        algo='luks'
        break
      fi
    done

    for v in ${dmg_volpaths[@]};  do
      if [[ -f $v ]]; then
        volpath=$v
        algo='dmg'
        break
      fi
    done

    if [[ "$volpath" == '' ]]; then
        return 1
    fi
    return 0
}

get_next_slot()
{
    # mounts=$($veracrypt --text --list)
    # 1: /b/om/CRUZER.vol /dev/disk4 /b/om/p
    # 2: /Volumes/3TB/om/LCRUZER.vol /dev/disk5 /b/om/l
    last_slot=$($veracrypt --text --list 2>/dev/null| sed 's/:.*//'|tail -1)
    # 2
    let 'next_slot=last_slot+1'
    echo $next_slot
}

mount_vera() {
    veracrypt='veracrypt'
    uname=$(uname)
    if [[ $uname == 'Darwin' ]]; then
      veracrypt='/Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt'
    fi

    $veracrypt --text --version >/dev/null 2>&1
    if [[ $? != 0 ]]; then
      get_out 1 "Error: veracrypt not found"
    fi

    $veracrypt --text --list 2>/dev/null | grep -q " $mountpoint\$"
    if [[ $? == 0 ]]; then
      # Already mounted. Say so.
      echo "Something is already mounted on $mountpoint"
      get_out 0 "Something is already mounted on $mountpoint"
    fi

    hostname=$(hostname | sed 's/\..*//')
    echo
    echo "Mounting V on $hostname ..."


    local verapass
    if [[ "$verapass" == '' ]]; then
        read -p 'Veracypt password: ' -s verapass
    fi
    slot=$(get_next_slot)
    $veracrypt --text --slot=$slot --keyfiles='' --pim=0 --protect-hidden=no --non-interactive --stdin --mount $volpath $mountpoint <<<"$verapass"
    mounts=$($veracrypt --text --list 2>/dev/null)
    printf "$mounts\n"
    # 1: /b/om/CRUZER.vol /dev/disk4 /b/om/p
    # 2: /Volumes/3TB/om/LCRUZER.vol /dev/disk5 /b/om/l

    printf "$mounts\n" | egrep -q " $mountpoint"
}

mount_luks() {
    local passw
    read -p 'LUKS password: ' -s passw
    sudo cryptsetup open "$volpath" PCRUZER --key-file=- < <(echo -n "$passw")
    sudo mount /dev/mapper/PCRUZER  "$mountpoint"
}

mount_dmg() {
    local passw
    read -p 'DMG password: ' -s passw
    echo -n "$passw" | hdiutil attach "$volpath" -stdinpass
    [[ -L "$mountpoint" ]] && rm -f "$mountpoint"
    [[ -d "$mountpoint" ]] && rmdir "$mountpoint"
    ln -s /Volumes/PCRUZER "$mountpoint"
}

main
