#!/usr/bin/perl
use strict;

main();

sub main
{
    my $veracrypt = $ENV{HOME}.'/bin/veracrypt';
    my $uname = `uname`;
    chomp $uname;
    my $vera_volume;
    my $mountpoint = '/b/om/t';

    if ($uname eq 'Darwin') {
        $vera_volume = get_usbstick_partition_mac();
    }
    elsif ($uname eq 'Linux') {
        $vera_volume = get_usbstick_partition_linux();
    }
    if ($vera_volume eq '') {
        die "Error: No appropriate USB stick found\n";
    }
    if (!-d $mountpoint) {
        system "mkdir -p $mountpoint";
    }
    if (!-d $mountpoint) {
        die "Error: Could not create mountpoint dir $mountpoint\n";
    }
    print "\nMounting T ...\n";
    my $out = `$veracrypt --text --list`;
    if ($out =~ m{ $mountpoint\s*?\n}) {
        print "Something is already mounted at $mountpoint.\n";
        exit 0;
    }
    if ($vera_volume ne '') {
        my $cmd = "$veracrypt --text --keyfiles='' --pim=0 --protect-hidden=no $vera_volume $mountpoint";
        print "doing: $cmd\n";
        system $cmd;
        system "$veracrypt --text --list";
    }
    else {
        exit 1;
    }
}


sub get_usbstick_partition_mac
{
    my @disklist = `diskutil list`;
# % diskutil list
# /dev/disk0 (internal, physical):
#    #:                       TYPE NAME                    SIZE       IDENTIFIER
#    0:      GUID_partition_scheme                        *500.3 GB   disk0
#    1:                        EFI EFI                     209.7 MB   disk0s1
#    2:          Apple_CoreStorage 500GB                   499.4 GB   disk0s2
#    3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
# 
# /dev/disk1 (internal, virtual):
#    #:                       TYPE NAME                    SIZE       IDENTIFIER
#    0:                  Apple_HFS 500GB                  +499.1 GB   disk1
#                                  Logical Volume on disk0s2
#                                  65503505-180E-4235-86A3-7CE0800D70E1
#                                  Unlocked Encrypted
# 
# /dev/disk2 (external, physical):
#    #:                       TYPE NAME                    SIZE       IDENTIFIER
#    0:     FDisk_partition_scheme                        *32.1 GB    disk2
#    1:                 DOS_FAT_32 8GB                     8.0 GB     disk2s1
#    2:                 DOS_FAT_32                         16.0 GB    disk2s2
#    3:                 DOS_FAT_32                         8.1 GB     disk2s3
# 

    my $tcruzer_disk = undef;
    my $tcron_disk = undef;
    my $disklist = join '', @disklist;
    if ($disklist =~ m{FDisk_partition_scheme\s+\*32.1 GB\s+(\S+)}s) {
        return "/dev/${1}s2"; # /dev/disk2s2
    }
    return '';
}


sub get_usbstick_partition_linux
{
    my $disklist = `lsblk -l`;
    # % lsblk -l
    # NAME MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
    # sda    8:0    0   20G  0 disk 
    # sda1   8:1    0   19G  0 part /
    # sda2   8:2    0    1K  0 part 
    # sda5   8:5    0 1022M  0 part [SWAP]
    # sdb    8:16   0  160G  0 disk 
    # sdb1   8:17   0  160G  0 part /b
    # sdc    8:32   1 29.9G  0 disk 
    # sdc1   8:33   1  7.5G  0 part 
    # sdc2   8:34   1 14.9G  0 part 
    # sdc3   8:35   1  7.5G  0 part 
    # sr0   11:0    1 1024M  0 rom  

    if ($disklist =~ m{\n(\S+)\s+.*?29\.9G\s+0\s+disk\s*\n}s) {
        return "/dev/${1}2"; # /dev/sdc2
    }
    return '';
}

