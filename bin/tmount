#!/usr/bin/perl
use strict;

main();

sub main
{
    my $veracrypt = $ENV{HOME}.'/bin/veracrypt';
    my $uname = `uname`;
    chomp $uname;
    my ($partition_1, $partition_2) = (undef, undef);
    if ($uname eq 'Darwin') {
        ($partition_1, $partition_2) = get_usbstick_partitions_mac();
    }
    my ($vera_volume, $mountpoint);
    if ($partition_1 ne '' and $partition_2 ne '') {
        $vera_volume = $partition_2;
        $mountpoint = '/b/om/t';
    }
    if ($vera_volume ne '' and $mountpoint ne '') {
        system "$veracrypt --text --keyfiles='' --pim=0 --protect-hidden=no $vera_volume $mountpoint";
        system "$veracrypt --text --list";
    }
}


sub get_usbstick_partitions_mac
{
    my @disklist = `diskutil list`;
# % diskutil list
# /dev/disk0 (internal, physical):
#    #:                       TYPE NAME                    SIZE       IDENTIFIER
#    0:      GUID_partition_scheme                        *500.3 GB   disk0
#    1:                        EFI EFI                     209.7 MB   disk0s1
#    2:          Apple_CoreStorage 500GB                   499.4 GB   disk0s2
#    3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
# 
# /dev/disk1 (internal, virtual):
#    #:                       TYPE NAME                    SIZE       IDENTIFIER
#    0:                  Apple_HFS 500GB                  +499.1 GB   disk1
#                                  Logical Volume on disk0s2
#                                  65503505-180E-4235-86A3-7CE0800D70E1
#                                  Unlocked Encrypted
# 
# /dev/disk2 (external, physical):
#    #:                       TYPE NAME                    SIZE       IDENTIFIER
#    0:     FDisk_partition_scheme                        *32.1 GB    disk2
#    1:                 DOS_FAT_32 8GB                     8.0 GB     disk2s1
#    2:                 DOS_FAT_32                         16.0 GB    disk2s2
#    3:                 DOS_FAT_32                         8.1 GB     disk2s3
# 

    my $tcruzer_disk = undef;
    my $tcron_disk = undef;
    my $disklist = join '', @disklist;
    my ($partition_1, $partition_2) = $disklist =~ m{\s0:\s+FDisk_partition_scheme\s+\*32\.1 GB\s+disk\d+\n.*?(disk\S+).*?(disk\S+)}s;
    # (disk2s1, disk2s2)
    if ($partition_1 ne '' and $partition_2 ne '') {
        return ("/dev/$partition_1", "/dev/$partition_2");
    }
    return ('', '');
}


sub get_usbstick_partition_linux
{
    my @disklist = `lsblk -l`;
    # % lsblk -l
    # NAME              MAJ:MIN RM   SIZE RO TYPE home_mountpoint
    # sda                 8:0    0   1.8T  0 disk 
    # sda1                8:1    0   487M  0 part /boot
    # sda2                8:2    0     1K  0 part 
    # sda3                8:3    0   1.7T  0 part /b
    # sda5                8:5    0   7.6G  0 part [SWAP]
    # sda6                8:6    0  93.1G  0 part /
    # sdb                 8:16   0   3.7T  0 disk 
    # sdb1                8:17   0   3.7T  0 part /c
    # sde                 8:64   1  29.9G  0 disk 
    # sde1                8:65   1   7.5G  0 part 
    # sde2                8:66   1  14.9G  0 part 
    # sde3                8:67   1   7.5G  0 part 
    # sr0                11:0    1  1024M  0 rom  
    # loop0               7:0    0    16G  0 loop 
    # veracrypt1 (dm-0) 252:0    0    16G  0 dm   /media/veracrypt1

    my $disk16gig = undef;
    my $disk8gig  = undef;
    for my $line (@disklist) {
        $line =~ s{\s*$}{}s;
        # sde1                8:65   1   7.5G  0 part 
        if ($line =~ m{^(\S+)\s+[\d\:]+\s+1\s+([\d\.]+)G\s+0\s+part$}) {
            my ($part, $size) = ($1, $2);
            # sde1, 7.5
            # sde2, 14.9
            # sde3, 7.5
            if ($size == 7.5) {
                $disk8gig = "/dev/$part";
            }
            elsif ($size == 14.9) {
                $disk16gig = "/dev/$part";
            }
        }
    }
    return ($disk16gig, $disk8gig);
}

