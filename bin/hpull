#!/bin/bash

# ~/.ssh/config
# Host home_dns
#     User om
#     Hostname crondite.duckdns.org
#     IdentityFile ~/.ssh/id_rsa
# 
# Host home_localip
#     User om
#     Hostname 192.168.10.180
#     IdentityFile ~/.ssh/id_rsa
# 

bindir=$(cd "$(dirname "$(readlink -f "$0")")" && pwd -P)

umask 077
mkdir -p ~/.ssh/hpull
cat <<"EOF" >~/.ssh/hpull/config
StrictHostKeyChecking=no
CheckHostIP=no
EscapeChar=~
UserKnownHostsFile=/dev/null
LogLevel ERROR

Host cron
    User om
    HostName 76.236.30.161
    Port 2222
    ControlPath ~/.ssh/ctrl-%l-to-%h
    ControlMaster auto
    ControlPersist 10m
    ServerAliveInterval 180
    GatewayPorts yes

Host nuc
    User om
    HostName 192.168.10.180
    Port 22
    ControlPath ~/.ssh/ctrl-%l-to-%h
    ControlMaster auto
    ControlPersist 10m
    ServerAliveInterval 180
    GatewayPorts yes

EOF

server='cron'
ping -W 3 -c 2 192.168.10.180 >/dev/null 2>&1 && server='nuc'

printf "Pull from $server ? (y/n): "
read yesno
if [[ $yesno != 'y' ]]; then
  exit 1
fi

ssh -F ~/.ssh/hpull/config $server 'echo CONNECTED' || (echo 'Connection failed; exit 1')
ssh -F ~/.ssh/hpull/config -t $server 'vmount'
vmount

echo
echo "Syncing ..."
p=$HOME/b/om/p/CRUZER
[[ -d $p ]] || ( echo "ERROR Not found: $HOME/b/om/p/CRUZER"; exit 1 )

p=$(cd $p && pwd -P)

tmpdir=$(mktemp -d)

cmd="(ssh -F ~/.ssh/hpull/config om@$server 'TZ=UTC rsync -a --delete /b/om/p/CRUZER/') >'$tmpdir/list_remote.txt'"
echo "doing: $cmd"
eval $cmd

cmd="(TZ=UTC rsync -a --delete $p/) >'$tmpdir/list_local.txt'"
echo "doing: $cmd"
eval $cmd

cmd="$bindir/rsync_list_normalize < '$tmpdir/list_remote.txt' >'$tmpdir/list_remote_normalized.txt'"
echo "doing: $cmd"
eval $cmd

cmd="$bindir/rsync_list_normalize < '$tmpdir/list_local.txt' >'$tmpdir/list_local_normalized.txt'"
echo "doing: $cmd"
eval $cmd

cmd="diff -u '$tmpdir/list_local_normalized.txt' '$tmpdir/list_remote_normalized.txt' >'$tmpdir/diff.txt'"
echo "doing: $cmd"
eval $cmd
exit_status=$?

cmd="egrep -v 'gitted/sandbox/\.git/' <'$tmpdir/diff.txt'"
echo "doing: $cmd"
eval $cmd

if [[ $exit_status != 0 ]]; then
    echo
    echo
    echo
    echo
    printf "Again, PULL from $server? (YES/n): "
    read yesno
    if [[ $yesno != 'YES' ]]; then
      exit_status=1
    else
        cmd="rsync -e 'ssh -F $HOME/.ssh/hpull/config' -a --delete $server:/b/om/p/CRUZER/ $p/"
        echo "doing: $cmd"
        eval $cmd
    fi
fi

ssh -F ~/.ssh/hpull/config $server 'vumount'
ssh -F ~/.ssh/hpull/config -O exit $server

cmd="rm -rf $tmpdir"
echo "doing: $cmd"
eval $cmd
exit $exit_status

