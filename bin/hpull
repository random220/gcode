#!/bin/bash

# ~/.ssh/config
# Host home_dns
#     User om
#     Hostname crondite.duckdns.org
#     IdentityFile ~/.ssh/id_rsa
# 
# Host home_localip
#     User om
#     Hostname 192.168.10.180
#     IdentityFile ~/.ssh/id_rsa
# 

ssh_config_backup=config._homesync
if [[ -f ~/.ssh/$ssh_config_backup ]]; then
    echo "ERROR: This file exists ~/.ssh/$ssh_config_backup"
    exit 1
fi

cmd="cp -p -f ~/.ssh/config ~/.ssh/$ssh_config_backup"
echo "doing: $cmd"
eval $cmd

cat > ~/.ssh/config <<EOF
StrictHostKeyChecking=no
CheckHostIP=no
EscapeChar=~
UserKnownHostsFile=/dev/null

Host home_dns
    User om
    Hostname crondite.duckdns.org
    IdentityFile ~/.ssh/id_rsa

Host home_localip
    User om
    Hostname 192.168.10.180
    IdentityFile ~/.ssh/id_rsa
EOF

bindir=$(dirname $0)
target_machine='home_dns'
ifconfig -a|egrep 'inet .*192\.168\.10\.' >/dev/null 2>&1
if [[ $? == 0 ]]; then
  target_machine='home_localip'
fi
ifconfig -a|egrep 'inet .*192\.168\.11\.' >/dev/null 2>&1
if [[ $? == 0 ]]; then
  target_machine='home_localip'
fi

printf "Pull from $target_machine? (y/n): "
read yesno
if [[ $yesno != 'y' ]]; then
  exit 1
fi

/usr/bin/ssh-copy-id -i ~/.ssh/id_rsa $target_machine
$bindir/hmount
$bindir/vmount

echo
echo "Syncing ..."
p=/b/om/p/CRUZER
if [[ ! -d $p ]]; then
  p=$HOME/b/om/p/CRUZER
fi
if [[ ! -d $p ]]; then
  echo 'ERROR: Not found /b/om/p/CRUZER or $HOME/b/om/p/CRUZER'
  exit 1
fi
p=$(cd $p && pwd -P)

tmpdir=$(mktemp -d)

cmd="(ssh om@$target_machine 'rsync -a --delete /b/om/p/CRUZER/') >'$tmpdir/list_remote.txt'"
echo "doing: $cmd"
eval $cmd

cmd="(rsync -a --delete $p/) >'$tmpdir/list_local.txt'"
echo "doing: $cmd"
eval $cmd

cmd="$bindir/rsync_list_normalize < '$tmpdir/list_remote.txt' >'$tmpdir/list_remote_normalized.txt'"
echo "doing: $cmd"
eval $cmd

cmd="$bindir/rsync_list_normalize < '$tmpdir/list_local.txt' >'$tmpdir/list_local_normalized.txt'"
echo "doing: $cmd"
eval $cmd

cmd="diff -u '$tmpdir/list_local_normalized.txt' '$tmpdir/list_remote_normalized.txt' >'$tmpdir/diff.txt'"
echo "doing: $cmd"
eval $cmd
exit_status=$?

cmd="egrep -v 'gitted/sandbox/\.git/' <'$tmpdir/diff.txt'"
echo "doing: $cmd"
eval $cmd

if [[ $exit_status != 0 ]]; then
    echo
    echo
    echo
    echo
    printf "Again, PULL from $target_machine? (YES/n): "
    read yesno
    if [[ $yesno != 'YES' ]]; then
      exit_status=1
    else
        cmd="rsync -a --delete $target_machine:/b/om/p/CRUZER/ $p/"
        echo "doing: $cmd"
        eval $cmd
    fi
fi

$bindir/humount
/usr/bin/ssh om@$target_machine 'rm -f .ssh/authorized_keys'
if [[ -f ~/.ssh/$ssh_config_backup ]]; then
    cmd="mv  ~/.ssh/$ssh_config_backup ~/.ssh/config"
    echo "doing: $cmd"
    eval $cmd
fi

cmd="rm -rf $tmpdir"
echo "doing: $cmd"
eval $cmd
exit $exit_status

