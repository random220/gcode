#!/bin/bash

export PATH=$HOME/bin:$HOME/gcode/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games

uname=$(uname)
if [[ $uname != 'Darwin' ]]; then
  echo "lmount works only on your mac"
  exit 1
fi
veracrypt='/Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt'


mountpoints=('/b/om/l' "$HOME/b/om/l")
mountpoint=''
for m in ${mountpoints[@]}; do
  if [[ -d $m ]]; then
    mountpoint=$(cd "$m" && /bin/pwd -P)
  fi
done

if [[ $mountpoint == '' ]]; then
  mountpoint="$HOME/b/om/l"
  mkdir -p $mountpoint
fi

if [[ ! -d $mountpoint ]]; then
  echo "Error: Could not create mountpoint dir $mountpoint"
  exit 1
fi
mountpoint=$(cd "$mountpoint" && /bin/pwd -P)

vera_volume=''

volfiles=('/Volumes/3TB/om/LCRUZER.vol'
          '/Volumes/1TB/CRUZER-20GB-MacOS.vol'
          '/Volumes/data/LCRUZER.vol'
          '/Volumes/MAC/CRUZER.vol'
          '/Volumes/1TBenc/CRUZER.vol')
vera_volume=''
for v in ${volfiles[@]}; do
  if [[ -f $v ]]; then
    vera_volume=$v
  fi
done

if [[ $vera_volume == '' ]]; then
  # % mount
  # /dev/disk1 on / (hfs, local, journaled)
  # devfs on /dev (devfs, local, nobrowse)
  # map -hosts on /net (autofs, nosuid, automounted, nobrowse)
  # map auto_home on /home (autofs, automounted, nobrowse)
  # /dev/disk2s1 on /Volumes/8GB (msdos, local, nodev, nosuid, noowners)

  mount_found=$(mount | egrep '^/dev/disk[0-9]+s1 on /Volumes/8GB \(msdos')
  if [[ $mount_found != '' ]]; then
    vera_volume=$(echo "$mount_found" | sed 's,s1 .*,s2,')
    if [[ ! -b $vera_volume ]]; then
      # Not a block device
      vera_volume=''
    fi
  fi
fi

if [[ $vera_volume == '' ]]; then
  # % mount
  # /dev/disk1 on / (hfs, local, journaled)
  # devfs on /dev (devfs, local, nobrowse)
  # map -hosts on /net (autofs, nosuid, automounted, nobrowse)
  # map auto_home on /home (autofs, automounted, nobrowse)
  # /dev/disk2s2 on /Volumes/F32 (msdos, local, nodev, nosuid, noowners)

  mount_found=$(mount | egrep -i '^/dev/disk[0-9]+s2 on /Volumes/8GBpart \(msdos')
  if [[ $mount_found != '' ]]; then
    vera_volume=$(echo "$mount_found" | sed 's,s2 .*,s3,')
    if [[ ! -b $vera_volume ]]; then
      # Not a block device
      vera_volume=''
    fi
  fi
fi

if [[ $vera_volume == '' ]]; then
  echo "Error: Volume not found"
  exit 1
fi

$veracrypt --text --version >/dev/null 2>&1
if [[ $? != 0 ]]; then
  echo "Error: veracrypt not found"
  exit 1
fi

$veracrypt --text --list 2>/dev/null | grep -q " $mountpoint\$"
if [[ $? == 0 ]]; then
  # Already mounted. Say so.
  echo "Something is already mounted on $mountpoint"
  exit 0
fi

echo
echo "Mounting L ..."

get_next_slot()
{
  # mounts=$($veracrypt --text --list)
  # 1: /b/om/CRUZER.vol /dev/disk4 /b/om/p
  # 2: /Volumes/3TB/om/LCRUZER.vol /dev/disk5 /b/om/l
  last_slot=$($veracrypt --text --list 2>/dev/null | sed 's/:.*//'|tail -1)
  # 2
  let 'next_slot=last_slot+1'
  echo $next_slot
}

slot=$(get_next_slot)
$veracrypt --text --slot=$slot --keyfiles='' --pim=0 --protect-hidden=no $vera_volume $mountpoint
mounts=$($veracrypt --text --list 2>/dev/null)
printf "$mounts\n"
# 1: /b/om/CRUZER.vol /dev/disk4 /b/om/p
# 2: /Volumes/3TB/om/LCRUZER.vol /dev/disk5 /b/om/l

printf "$mounts\n" | egrep -q " $mountpoint"
result=$?

exit $result


