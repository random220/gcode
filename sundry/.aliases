umask 022 

if [[ ! -f ~/.inputrc ]]; then
  echo 'set bell-style none' >~/.inputrc
fi

export VISUAL=vi
export EDITOR=vi

pcomps=(
$HOME/.local/bin
$HOME/go/bin
$HOME/bin
$HOME/gcode/bin
$HOME/go/bin
/usr/local/sbin
/usr/local/bin
/usr/local/go/bin
/usr/sbin
/usr/bin
/sbin
/bin
)

PATH=
for p in ${pcomps[@]}; do
  if [[ -d $p ]]; then
    PATH="$PATH:$p"
  fi
done
PATH=$(echo "$PATH"|sed 's/^://')
export PATH
unset p
unset pcomps


alias vera='(veracrypt&)'
on_mint=0
if [[ -f /etc/lsb-release ]]; then
  grep -q 'DISTRIB_ID=LinuxMint' /etc/lsb-release
  if [[ $? == 0 ]]; then
    on_mint=1
  fi
fi
if [[ $on_mint == 0 ]]; then
  export LC_ALL=C
  export LANG=C
fi
unset on_mint

# Red prompt
# export PS1="\[\e[31m\]\u@\h \w >\n%\[\e[m\] "
# Green prompt
# export PS1="\[\e[32m\]\u@\h \w >\n%\[\e[m\] "
# Bright Green
# export PS1="\[\e[01;32m\]\u@\h \w >\n%\[\e[m\] "
# Blue prompt
# export PS1="\[\e[34m\]\u@\h \w >\n%\[\e[m\] "
# Bright Blue prompt
# export PS1="\[\e[01;34m\]\u@\h \w >\n%\[\e[m\] "
# Magenta prompt
# export PS1="\[\e[01;35m\]\u@\h \w >\n%\[\e[m\] "

# echo -e "\e[1m  BOLD   \e[0m"
# echo -e "\e[38;5;20m  BLUE   \e[0m"
# echo -e "\e[38;5;22m  GREEN   \e[0m"
# "\u@\h \w >\n% "   : The actual prompt 'om@om-Latitude-E7450 ~ '

export PS1="\e[1m\e[38;5;20m\u@\h \w >\n% \e[0m\e[0m"    # blue
export PS1="\e[1m\e[38;5;199m\u@\h \w >\n% \e[0m\e[0m"   # magenta
export PS1="\e[1m\e[38;5;40m\u@\h \w >\n% \e[0m\e[0m"    # green
export PS1="\e[1m\e[38;5;23m\u@\h \w >\n% \e[0m\e[0m"    # darker green
export PS1="\e[1m\e[38;5;56m\u@\h \w >\n% \e[0m\e[0m"    # nice blueish magenta
export PS1="\e[1m\e[38;5;199m\u@\h \w >\n% \e[0m\e[0m"   # magenta
export PS1="\e[1m\e[38;5;20m\u@\h \w >\n% \e[0m\e[0m"    # sulekha blue
alias ps1="echo export PS1=\''$PS1'\'"

export HISTTIMEFORMAT="%F %T "
export P4CONFIG=.p4config
export P4PORT=build-p4proxy.eng.vmware.com:1666

if [[ $(uname) == Linux ]]; then
  alias ls='ls --color=auto'
else
  alias ls='ls -G'
fi
#alias ll="ls -altr --quoting-style=shell-escape"
alias ll="ls -altr"
alias cdp='cd -P'
alias vi=vim

alias rw='vimdiff ~/zr.txt ~/zw.txt'
alias lr='vimdiff ~/zl.txt ~/zr.txt'
alias lw='vimdiff ~/zl.txt ~/zw.txt'

alias glog='git log --all --graph --pretty=format:'\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit --date=relative'
alias glog1='git log --graph --decorate --oneline'
alias glog2='git log --all --graph --decorate --oneline'
alias grel='git branch -r|grep origin/RELEASE|xargs git log --graph --decorate --oneline'
alias gl='git log --all --graph --pretty="%h %ad %Cred%d%Creset %an: %s" --date=short'
alias gconv='git config --local --bool core.bare false'
alias dfiles='git diff --name-status'

alias gdesc='git show --name-status'
alias gdescv='git log --summary -1 -M'
alias gs='git status -s'
alias vig='cp ~/gcode/sundry/viminfo-git.txt ~/.viminfo'
alias vip='cp ~/gcode/sundry/viminfo-p4.txt ~/.viminfo'
alias p4m='p4 diff=3 merge3 -r' # 'p4 help merge3' /path/to/base /path/to/theirs /path/to/yours

alias pp='enscript -2rG --colo=1 --line-numbers -p out.ps --highlight=python -c'

gits()
{
#git config credential.helper store
git config --global credential.helper 'cache --timeout='$(( 5*60*60 )) # 5 hours
git config --global color.ui true
git config --global push.default matching
git config --global merge.conflictstyle diff3
git config --global user.email omandal@localhost
git config --global user.name "Om Mandal"
}

function gfresh() {
    local b=$(git branch|grep '*'|awk '{print $2}')
    git branch ____b
    git checkout ____b
    git branch|xargs git branch -D
    git tag|xargs git tag -d
    local o=$(git remote -v|grep '^origin'|grep '(fetch)$'|awk '{print $2}')
    git remote rm origin
    git remote add origin $o
    git pull
    git checkout $b
    git branch -D ____b
}
function glocal() {
    for branch in $(git branch -r|grep -v -- '->'|grep 'origin/'|sed 's/^  origin\///'); do
      git branch $branch origin/$branch
    done
    git remote rm origin
}

function t0
{
  local name=T0
  if [[ $1 != '' ]]; then
    name=$1
  fi
  local ls=$(tmux ls | grep "^${name}:" 2>/dev/null)
  if [[ $ls == '' ]]; then
    tmux new -s $name
  else
    # T0: 2 windows (created Sat Oct 21 18:35:33 2017) [139x51] (attached)
    tmux a -d -t $name
  fi
}

fing () 
{ 
    if [[ $1 == '' ]]; then
        return;
    fi;
    local _type;
    for _type in '' obj release;
    do
        local cmd="lxc list --format=csv user.fingerprint=${1}-$_type";
        local out=$(bash -c "$cmd");
        if [[ $out != '' ]]; then
            echo "$cmd";
            echo "$out";
            local container=$(echo "$out"|sed 's/,.*//');
            lxc exec $container su - b;
        fi;
    done
}


alias t1='t0 T1'
alias tls='tmux ls'

# vmware stuff
if [[ -f $HOME/ww/.vmware_aliases ]]; then
  . $HOME/ww/.vmware_aliases
fi
alias ovftool='/Applications/VMware\ OVF\ Tool/ovftool'
alias t='touch ~/a.txt; open ~/a.txt'
alias mp=multipass

alias jl='LC_ALL=C.UTF-8 LANG=C.UTF-8 pipenv run jupyter lab --ContentsManager.allow_hidden=True'
alias vmr='"/Applications/VMware Fusion.app/Contents/Library/vmrun"'
alias sd1='ssh d1'
alias sd2='ssh d2'
alias sd='sd2'

alias prx='ssh -g -N -f vmwgitlab'
alias prk='kill $(ps uxw|grep '\''ssh -g -N -f vmwgitlab'\''|grep -v grep|awk '\''{print $2}'\'')'
alias cdp='cd ~/sb/cloud-build/docker/deploy'

function cent_fix_c6_repo() {
  local d=$(mktemp -d)
  cat <<EOF >$d/repoconf
H4sIAL8remAAA7WVTWvbQBCG7/oVAzE+VVZyyaEgCg0hhFJq2uYQTA9jaSQtWu2K/Uijf99ZrfyR
pDEksU9e7cy87+wz8uoMrki5H7/Sr2hpYajXyVlyBr8bgk4Yow3YwTrqwFuy4Hi70EpR4YSq4XYJ
WJaGrAVdxaAULAeoyvDIQr4v0RFYh86PWYRFs5F2GnpRtNNjkEeuNTRVlSGBpVimJl0b7BtRoJQD
22hLIbrzXADcaw+20V6WoVuOCQsV28QTTqI2NKVk6Hng/ODWofKjbGgmnEuzrNl0tRiB3MbzxT0p
rMuh1ExEaQd/tWlHIxb8BGgBoWI9WCOfLZgUqMCZYVRgLUMdmpaPp73jJEveyBykUARCMWwsR88k
WYXgn0RhR/k0ppkhSbz7wA2mEIbGgntdNc71n7Nst7MouFDbhTZ19mUqzvdU5miKJp8Fp7Cah1cg
13YuVGUwn40/bLFp84n+vnZcZnvKWXjc6GbJvoJliQf08kl3l4uL82c1dV8XDRVtfhGWLQ15JSRx
cUauyPpWZKbvUg5lP5ff05vlTfrt+j6dUF0mI+uxnXI7/dW0OIT1bvumHJ3s5H4MvJPU2xn/p/Dj
oPkiEE5ohRJ6fu+xpun/3OEAawr/yMrLZEWPzuBB+tdjxingR+9jsI9Kb0f/su7D5F8Fz17E93Dl
VRHjwg3jDfzI/MI1t0lPVrHNXvqDg1lyPDn6UHbezwbznrnsxF5hTArXksr8/J20+evnjFgzjS3s
9TB+YbSFO0sm0Iw5h1BexZQT0IzCx0AZlU7C8R/bD74mdggAAA==
EOF
  docker cp $d/repoconf c6:/tmp/a.txt
  rm -rf $d
  docker exec -ti c6 bash -c 'cat /tmp/a.txt | base64 -d | gunzip - >/etc/yum.repos.d/CentOS-Base.repo; rm -f /tmp/a.txt'
  docker exec -ti c6 yum clean all
}

function cent_config() {
  local cont=$1
  if [[ $cont == 'c6' ]]; then
    cent_fix_c6_repo
  fi
  docker exec -ti $cont bash -c 'useradd -s /bin/bash -m om'
  docker exec -ti $cont bash -c 'yum -y update'
  docker exec -ti $cont bash -c 'yum -y install epel-release'
  docker exec -ti $cont bash -c 'yum -y install sudo tmux vim python3 perl perl-Data-Dumper make gcc wget curl git rsync'
  local d=$(mktemp -d)
  echo 'om ALL=(ALL) NOPASSWD: ALL' >$d/om
  docker cp $d/om $cont:/etc/sudoers.d/om
  rm -rf $d
  docker exec -ti $cont bash -c 'chown root:root /etc/sudoers.d/om; chmod 600 /etc/sudoers.d/om'
  docker exec -ti $cont bash -c 'mkdir /tmp/x; cd /tmp/x; wget https://golang.org/dl/go1.16.3.linux-amd64.tar.gz; mkdir -p /usr/local; cd /usr/local; tar xf /tmp/x/go1.16.3.linux-amd64.tar.gz; cd /usr/bin; ln -s /usr/local/go/bin/* .; cd /; rm -rf /tmp/x'
  docker exec -ti $cont su - om -c 'git clone https://github.com/random220/gcode; rm .bashrc; ln -s gcode/sundry/.bashrc .; ln -s gcode/sundry/.aliases .;ln -s gcode/sundry/.vimrc .; ln -s gcode/sundry/.tmux.conf .'
  docker stop $cont
  docker start $cont
  docker exec -ti $cont bash -c 'yum -y clean all'
  docker exec -ti $cont su - om -c 'mkdir ~/sb; cd ~/sb; git clone https://github.com/go-delve/delve; cd delve; go install github.com/go-delve/delve/cmd/dlv; cd /; rm -rf ~/sb'
}


function cent_start() {
  local name=$1
  if [[ $name == 'c6' ]]; then
    local image='centos:6'
  elif [[ $name == 'c7' ]]; then
    local image='centos:7'
  elif [[ $name == 'c8' ]]; then
    local image='centos:8'
  fi

  local id=$(docker ps -qf name=$name)
  if [[ $id == '' ]]; then
    # not running. but is it still there but just dead?
    local id=$(docker ps -aqf name=$name)
    if [[ $id == '' ]]; then
      # still not found. create
      docker run -itd -h $name --name $name $image
      cent_config $name
    else
      # found to be dead. wake
      docker start $name
    fi
  fi

  # get in
  docker exec -ti $name su - om
}

function d6() {
  cent_start c6
}
function d7() {
  cent_start c7
}

function d8() {
  cent_start c8
}

